#!/usr/bin/env sh

# ---
# description: Reports the remaining TODO strings across the project.
# ---

OUTPUT_NAME="todos.md"
OUTPUT_DIR="target"
# REGEX='^[[:space:]]*(# |\*\*)?TODO:'
REGEX='^[[:space:]]*(#|\"#|\*\*)[[:space:]]*TODO:'

script_path="$(realpath "${0}")"
script_name="$(basename "${script_path}")"
script_dir="$(dirname "${script_path}")"
output_path="${script_dir}/${OUTPUT_DIR}/${OUTPUT_NAME}"

if ! cd "${script_dir}"; then
    printf '%s\n' \
        "CDing to script directory failed:" \
        "  ${script_dir}" \
        >&2
    exit 1
fi

git_dir="$(git rev-parse --show-toplevel 2>/dev/null)"

if ! cd "${git_dir}"; then
    printf '%s\n' \
        "CDing to git repository location failed:" \
        "  ${script_dir}" \
        >&2
    exit 1
fi

tmp_path="${output_path}.tmp"

git ls-files --cached --others --exclude-standard -z |
    xargs -0 grep -Hn -E "${REGEX}" 2>/dev/null |
    sed 's@^[[:space:]]*@@' |
    sed 's@^\(.*\):\([0-9]*\):@\- [\1, line \2](../../\1#L\2): @' >"${tmp_path}"

todos="$(cat "${tmp_path}")"
no_todos="$(echo "${todos}" | sed -n '$=')"

rm "${tmp_path}" "${output_path}" 2>/dev/null

{
    printf \
        '# TODOs in this repository @ %s\n\n' \
        "$(date '+%Y-%m-%dT%H:%M')"
    # shellcheck disable=SC2016
    printf \
        'This file was automatically generated by `%s`.\n\n' \
        "${script_name}"
    printf \
        'Number of TODOs: %s\n\n' \
        "${no_todos}"
    if [ "${no_todos}" -ne 0 ]; then
        printf '**NOTE:**\n\n'
        printf '\- Paths are specified relative to the root of the repository.\n'
        printf '\- VS Code cannot directly jump to line numbers of notebooks.\n'
        printf '\n'
        printf '%s\n' "${todos}"
    fi
} >"${output_path}"
